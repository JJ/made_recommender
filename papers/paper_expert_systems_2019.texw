<<echo=False>>=
import os
import pandas as pd
import scipy.stats  as stats
import matplotlib.pyplot as plt
import sys
sys.path.append(os.getcwd())

from utils import *

FILM_TROPES_JSON_BZ2_FILE = '../datasets/scraper/cache/20190501/films_tropes_20190501.json.bz2'
FILM_EXTENDED_DATASET_TABLE_BZ2_FILE = '../datasets/extended_dataset.csv.bz2'
FILM_EXTENDED_DATASET_DICTIONARY_BZ2_FILE = '../datasets/extended_dataset.json.bz2'
USE_HDF = True
SCRAPER_LOG_FILE = '../logs/scrape_tvtropes_20190501_20190512_191015.log'
MAPPER_LOG_FILE = '../logs/map_films_20190526_164459.log'
EVALUATOR_BUILDER_LOG_FILE = '../logs/build_evaluator_20190624_223230.log'
TOP_VALUES = 14
EVERYTHING_BUT_TROPES = ['Id','NameTvTropes', 'NameIMDB', 'Rating', 'Votes', 'Year']
EVALUATOR_HYPER_PARAMETERS_LOG_FILE = '../logs/build_evaluator_hyperparameters_20190622_203043.log'
@

\documentclass[APA,LATO1COL]{WileyNJD-v2}
\usepackage{minted}
%\usepackage{moreverb}

% -- begin: Added by Rubén
\usepackage{subcaption}
\captionsetup{compatibility=false}
\usepackage{tabularx}
\usepackage{ragged2e}
\newcolumntype{L}{>{\raggedright\arraybackslash}X}
% -- end: Added by Rubén


\newcommand\BibTeX{{\rmfamily B\kern-.05em \textsc{i\kern-.025em b}\kern-.08em
T\kern-.1667em\lower.7ex\hbox{E}\kern-.125emX}}

\articletype{Article Type}%

\received{<day> <Month>, <year>}
\revised{<day> <Month>, <year>}
\accepted{<day> <Month>, <year>}

%\raggedbottom

\begin{document}

\title{Chasing compelling stories using computational intelligence and tropes}

\author[1]{Rubén Héctor García Ortega}

\author[2]{Pablo García Sánchez}

\author[3]{Juan Julián Merelo Guervós}



\address[1]{\orgdiv{Org Division}, \orgname{Org name}, \orgaddress{\state{State name}, \country{Country name}}}

\address[2]{\orgdiv{Org Division}, \orgname{Org name}, \orgaddress{\state{State name}, \country{Country name}}}

\address[3]{\orgdiv{Org Division}, \orgname{Org name}, \orgaddress{\state{State name}, \country{Country name}}}

\corres{*Corresponding author name, Corresponding address. \email{authorone@Email.com}}

\presentaddress{Present address}

\abstract[Abstract]{}

\keywords{Computational Intelligence; Tropes; Scrapping; Neural Networks; Genetic Algorithms}

%You should probably edit this too - JJ
\jnlcitation{\cname{%
\author{Williams K.},
\author{B. Hoskins},
\author{R. Lee},
\author{G. Masato}, and
\author{T. Woollings}} (\cyear{2016}),
\ctitle{A regime analysis of Atlantic winter jet variability applied to evaluate HadGEM3-GC2}, \cjournal{Q.J.R. Meteorol. Soc.}, \cvol{2017;00:1--6}.}

\maketitle

% Edit or eliminate this - JJ
\footnotetext{\textbf{Abbreviations:} ANA, anti-nuclear antibodies; APC, antigen-presenting cells; IRF, interferon regulatory factor}


\section{Introduction}\label{sec1}

Crafting quality films % of film scripts - jj
 is quite challenging, according to ~\cite{Hennig-Thurau2019},
because of the plot complexities and the
\textit{multiplicative production function} % You should probably define this - JJ
of entertainment,
in other words, the elements need to work together and a single one failing can provoke a disaster in cascade.
That is why, in the current research, and in order to build an authoring tool to help
on the design of films from the quality perspective, we are counting with the
experts' contributions % Contributors are not experts. Maybe talk about the wisdom of crowds - JJ
to both model the films in a way that describes them from different perspectives, and have a measure of quality
that summarizes all the perspectives in 360 degrees,
considering the \textit{multiplicative production function} as well.
Our candidates for both mechanisms are out there,
tropes or patterns that have been discovered in the films, and the massive human-evaluated ratings, respectively.

% Intenta responder a: que son los tropos y por que nos importan

We can model a film % Again, be precise. A bag of tropes does not model a film
% or even a film script. It describes roughly plot devices and atmosphere - JJ
% Maybe you don't want to model, but characterize it. Or maybe describe it- JJ
by using the set of tropes that we can find in it.
A trope is as a recurring narrative device~\cite{baldick2015oxford};
it can be a technique, a motif, an archetype or a \textit{clich\'e},
used by the authors % specify: script writers, producers, director.
% Are we interested in "films in b&w", for instance, which is purely visual? - JJ
 to achieve specific effects that might vary from interest-increasing
to surprising through recall familiarity or entertaining,
in their creative works, such as books, films, comics or videogames.
Some tropes are broadly adopted and academically studied such as
the \textit{Three-act Structure} formulated by Syd Field~\cite{field1982screenplay},
the \textit{Hero's Journey} studied by Vogler~\cite{vogler2007writer},
the \textit{McGuffin} popularized by Hitchcock~\cite{truffaut1985hitchcock} and
the \textit{Chekhov's Gun} developed % or mentioned for the first time? - JJ
by the Russian writer with the eponymous
name~\cite{bitsilli1983chekhov},
but there are thousands of not-so-widely used tropes as well, discovered and
catalogued everyday by professionals and enthusiastic of the storytelling;
their study is organic, dynamic and extensive. % A mention to PicTropes would
% be in order here - JJ
In this paper, we will call \textit{Film DNA} to the set of tropes
that we are able to find in a film
and define the structure, characters, events, mood, settings, narration, etc.
As the tropes are \textit{living concepts},
which grow as they are discovered as common
patterns in other stories, the \textit{Film DNA} is, by definition, incomplete and evolving,
yet it is still interesting to define stories, categorize them
and model them from a mathematical perspective.

% So far we don't know why you are interested in all this, and what's the
% broad outline of the paper. What do you want to do with tropes? The challenges
% should be presented in the first paragraph. You shouldn't arrive at this point
% in the introduction and still wonder what the paper is about - JJ

% Intenta responder a: Que es la calidad (muy difícil + subjetivo -> rating es un indicador)
At the same time, we need to be able to link a measure of quality to the \textit{Film DNA}
and it is a complex metric.
Luckily we have access to databases with films' information
that includes the popularity of the films and their human evaluated ratings,
provided by the community of fans,
so we can rely on these evaluations as a measure of quality and add it to our model,
in order to process them, make new evaluations and suggestions.

Given this model, that includes \textit{Film DNAs} and ratings,
the first thing to confirm is that there are correlations
and internal relations between the \textit{Film DNAs} and the ratings
so we can predict the rating from a \textit{Film DNA}.
Furthermore, even though intuitively
the \textit{Film DNA} is a profound way to describe a story
from many different perspectives, following the analogy of the DNA,
there are environmental factors that could deeply affect the performance of the story as well.
% Those are epigenetic factors, not the DNA. Following the analogy of
% an organism developing from its DNA, maybe... - JJ
This method might not guarantee the quality of a film,
as a \textit{Film DNA} can lead to infinite implementations/films with different qualities
and there are many parameters to consider
that are not reflected in the \textit{Film DNA}.
however, it can be used as an indicator of the potential of the story or the
most probable implementation based on the universe of currently analyzed films.

The goal of the paper is to demonstrate
how computational intelligence can use film tropes to help on the creation
and improvement of quality films % or film scripts? Or film DNA? - JJ
 in the context of authoring tools and Content Generation.
% Intenta responder a: Por qué generar o mejorar el conjunto de tropos (sistemas complejos +  guiones + videojuegos, etc)
% That should be in the first paragraph. "We want to do this, but *this* is
% difficult. So we have thought about solving *that*, which is difficult (but less)
% because... ""

% Intenta responder a: La metodología (no imagen, solo explicar los pasos de manera general)
Our approach extracts the tropes, the ratings and the \textit{Film DNAs}
from external Data Sources in order to build what we have called the \textit{Extended Dataset},
a set of XXX films that links to XXX tropes and the rating.
% You can use variables from the code directly - JJ
We use a genetic algorithm to build a \textit{Film DNA} % trope bag might be better - JJ
that maximizes the rating evaluated through a surrogate model:
a \textit{Neural Network} that is trained with the \textit{Extended Dataset}
and is able to predict the rating from the \textit{Film DNA}.

% «However, submitting our trope bags to the box office is impossible, which is
% why we will be using deep learning to create a surrogate model that is able
% to infer, from any combination of tropes, ratings and box office »
% Write something like that to explain the different steps of what we are going
% to do: first deep learning, then the evolutionary algorithm - JJ

% Intenta explicar: Los experimentos que vamos a hacer
The effect of the different parameters for the Genetic Algorithm
will be tested in two different experiments:
An attempt to find the \textit{Film DNA} with the highest expected rating for fixed set size
and an attempt to \textit{improve} an existing \textit{Film DNA}
by adding tropes that will increase the quality of the film.
% I didn't know about this one. You need to justify this in terms of your objective
% Which is not improving existing films. It might be an academic exercise, but
% you need to justify it very well.

% TODO:El resto del paper…


\section{State of the art}
% But this part is important. You should at least know related work, because
% some of them might be so important to mention in the introduction - JJ
% TODO:Tropes (Citas de papers gente que use tropos para cosas y tb TVTRopes, DBTropes, y las limitaciones). Enlazarlo con lo nuestro.
% TODO:La calidad (Citas de gente que mida la calidad en cualquier cosa, y específicamente estructurales -> tropos). Enlazarlo con lo nuestro.
% TODO: Modelos surrogados. Enlazarlo con lo nuestro.
% TODO: Algoritmos genéticos aplicados a la generación de historias. Enlazarlo con lo nuestro.
% TODO: conclusión: lo que vamos a hacer es mejor

Since the beginning of the century, % Which century? - JJ
 narrative formalisms have been proposed that allow video game developers and researchers in computational narrative to generate narratives in a procedural manner. For example, the formalism proposed by the work of Propp's \cite{propp2010morphology} (first edited in 1928) is still in use today. It is based on 7 different roles, each with a list of actions they can take over the course of a story. However, it is simply limited to expressiveness, as it is not possible to create new functions. To solve this, other authors propose the use of agents, each with actions and obligations, that allow to guide them through the arc of a story. This has advantages, as each agent can be programmed to have different behaviours based on psychological models \cite{Thompson18NarrativeEvents}.

Some authors have proposed the use of tropes, defined in the introduction, as a way of structuring a story in a consistent and reusable way. In \cite{Thompson18NarrativeEvents}, a system of agents relies on tropes to obtain a consistent narrative, to describe the social norms that model the world in which they live. The authors, as in this work, use tropes available on TVTropes as a base and translate them into deontic logic statements, using TropICAL language, which are the input for a logic programming solver. However, they do not use all the tropes, but a small set chosen by hand. %Pablo: Deberia completar esto % What is deontic? - JJ

However, it is very complicated to evaluate the content generated by an automatic generator, not only because of its non-deterministic behaviour that makes it difficult to predict its outputs, but also because of the subjective, diverse and stochastic nature of the users who are going to consume those contents \cite{TogeliusCap4Evaluating}. To evaluate a generator one can use directly the opinion of the designer, or indirectly from human users (for example, from surveys). But another possibility is the use of AI, by simulating and estimating the quality of the content vis a vis some metrics. Moreover, through the use of crowdsourcing, it is possible to obtain a large corpus of examples to be used in computational narrative \cite{Guzdial15Crowdsourcing}. In fact, it is possible to extract information about review sites \cite{BoPang08OpinionMining} (such as MetaCritic or IMDB), to be the input of a model like the one we propose in this article.

%%HABLAR DE LOS MODELOS SURROGADOS AQUI

Our previous work is based on some of the ideas mentioned above. In \cite{GarciaOrtega15MADE} we proposed the MADE framework: a parametrizable multi-agent system that allowed the generation of backstories in massive environments. A genetic algorithm was used to optimize the parameters of the system (simulation time, size of the world, parameters of the behaviour of the agents, among others) with respect to the appearance of different archetypes, such as {\em Hero} or {\em Villain}. These archetypes are defined from the possible actions that an agent can perform: for example, the archetype Villain appears when an agent fights against another for food.  However, this form of evaluation was difficult to justify in order to measure the quality of the generated stories, since it was based on an objective decision: just the number of different character archetypes that emerge during the run of the world. Also, the list of possible actions for the agents was very limited. That is the reason that later we proposed in \cite{GarciaOrtega16MADE2} a more advanced model, with more complex agents, with the possibility of extracting knowledge from a logical reasoner. On this occasion we used as quality metric the appearance of the archetype of the Monomyth (or Hero's Journey) and the different archetypes that compose it. To do this, logical reasoning was applied based on the predicates produced by the different events that emerged in the system. However, as in previous work, the mere appearance of the monomyth does not serve to measure the interest of the stories generated by the system.



That is why in this work we propose the combination of the previous ideas: to use crowdsourcing data and film scores to generate a surrogate computational model to evaluate the subjective quality of a story from a set of tropes. %TERMINAR








\section{Methodology}

% The objective of our methodology is... (open source, open science, open data,
% high performance, repeatability... )

Our methodology is divided in four main steps, explained below and described
in the figure~\ref{fig:main_workflow_extended}: % As is usual, say the objective
% you want to achieve and then what you do to achieve that. Explicitly mentioned
% in step 3, check the rest - JJ
\begin{itemize}
    \item[Step 1] Extract/scrape the tropes for every film
    and codify them as \textit{Film DNAs}.
    As we will see, our dataset will have limitations derived
    from the fact that is fed from
    the community, finding that popular films are broadly described in terms of tropes
    and unpopular films poorly described or directly missing. % Explain variability - JJ
    \item[Step 2] % Disambiguation of film names needs to be at least mentioned - JJ
    % Or rather you should change "map" to disambiguation, which seems the best
    % description for this step - JJ
    Map the films' features such as the rating and genres to the previously built
    \textit{Film DNAs}. This \textit{extended dataset}  will show limitations as well
    based on the original one
    and the automatic matching based on different heuristics.
    As we will see, a trope that is widely used doesn't need to be linked to good ratings,
    tropes that are present in bad films can become good in different combinations and vice-versa.
% Need to explain that this will cull the initial TVtropes database to only a subset - JJ
    \item[Step 3] % Train a surrogate model
    Build a Neural Network to predict the rating from a \textit{Film DNA}.
    We will follow different \textit{rules of thumb}
    to achieve a moderately good solution that serves our purposes.
    The neural network will handle the unknown relations between tropes and their combinations.
    \item[Step 4] % Don't say what you do, say your objective
    % → Optimize the "trope bag" with respect to ratings or box office. - JJ
    Build a Genetic Algorithm with specific operators
    that relies in the Neural Network as surrogate model
    to build new constrained \textit{Film DNAs} that optimize the expected rating.
\end{itemize}

% DONE: Diagrama y explicar los pasos
<<echo=False>>=
films_dictionary = read_compressed_json(FILM_TROPES_JSON_BZ2_FILE)
tropes_dictionary = reverse_dictionary(films_dictionary)


n_films = len(films_dictionary.keys())
n_tropes = len(tropes_dictionary.keys())


workflow = f'''
digraph {{
    splines=polyline
    rankdir=LR
    ranksep=0.25;
    margin=0;
    nodesep=0.3;
    graph [ resolution=128, fontsize=30];

    node [margin=0 fontcolor=black fontsize=10 width=1];
    tvtropes[label="TVTropes\nwebsite\n\ntvtropes.org\n " type="database"];
    scrape_tropes[label="Step 1:\nScrape tropes\n\nPython+\nrequests+\nlxml+bz2\n~11.900 pages" type="process"];
    dataset[label="Dataset\n\nfilms->tropes\n({n_films}->{n_tropes})\n " type="data"];
    imdb[label="IMDB\ndatasets:\nimdb.com/\ninterfaces/" type="database"];
    map_rating[label="Step 2:\nMap Genres\nand Rating\n\nPython+\nHeuristics+\nbz2" type="process"];
    extended_dataset[label="Extended\nDataset\n\nFilm DNA +\nrating" type="data"];
    build_evaluator[label="Step 3:\nBuild\nEvaluator\n\npandas+\nsklearn\n " type="process"];
    evaluator[label="Surrogate model\n\nNeural Network\nFilm DNA ->\nRating\n\nNLPRegressor" type="tool"];
    user[label="User's\npre-selected\ntropes" type="data"];
    dna_builder[label="Step 4:\nGenetic Algorithm\nto Build\nFilm DNAs\n\ninspyred+\ncachetools" type="process"];
    trope_sequence[label="Optimal\nFilm\nDNA" type="data"];

    tvtropes -> scrape_tropes[minlen=0];
    scrape_tropes -> dataset[minlen=1];
    dataset -> map_rating;
    imdb -> map_rating[minlen=0];
    map_rating -> extended_dataset;
    extended_dataset -> build_evaluator;
    build_evaluator -> evaluator;
    evaluator -> dna_builder;
    user -> dna_builder[minlen=0];
    dna_builder -> trope_sequence;
}}'''

draw_graphviz(workflow, "main_workflow_extended.pdf")
@

\begin{figure}
\centering
\includegraphics[width=\textwidth]{figures/main_workflow_extended.pdf}
\caption[Methodology]{Methodology to generate constrained optimal Film DNAs using Genetic Algorithms with Neural
Networks as surrogate models, fed from TVTropes and IMDb.\label{fig:main_workflow_extended}}
\end{figure}


% TODO: Extracción de tropos: Explicar brevemente el tema de TVTRopes, DBTropes y nuetsro scraper + explicar los datos (Gráficas y tops)

\subsection{Step 1: Extract the tropes}
% Don't need to devote much time to this except if it's extraordinarily novel
% Refer to former report (PicTropes) and the upcoming one - JJ
We are going to use tropes as described in a live wiki called \cite{tvtropes_2}, that is
collecting thousand of descriptions and examples of tropes from 2014 until now. As the data is fed by a community
of users, we could find the bias that popular films are better described and analysed in terms of the tropes than independent
films, and that popular tropes are more recognised than very specific ones. % REFERENCE NEEDED - JJ
% Which means that... (tropes cound be under/overrepresented|false positives and negatives are possible) - JJ
The semantic network of knowledge behind \textit{TVTropes.org} is huge and complex; it massively links hierarchies of tropes
to their usage in creations for digital entertainment. The data, however, is only available through its web interface,
which is why, in order to make it usable by the scientific community, \cite{maltekiesel_2} extracted all
their data to a database so-called \textit{DBTropes.org}.\\
% But we are not using it... And that Db is outdated - JJ
As the base of the research on automatic trope generation, we begun with a dataset based in the
latest version of DBTropes, called PicTropes\cite{garcia2018overview} that included 5,925 films with 18,270 tropes.
However, the last version of BDTropes is from 2016, and the community of users of TVTropes has tripled the size
of the database since then; if we work with the latest data from TVTropes our machine learning algorithms
would benefit from having much entries and hence, provide better results. That's why our first step is to
extract the data directly from TVTropes. % and made this dataset available to the public... - JJ


<<echo=False>>=
films_dictionary = read_compressed_json(FILM_TROPES_JSON_BZ2_FILE)
tropes_dictionary = reverse_dictionary(films_dictionary)

n_films = len(films_dictionary.keys())
n_tropes = len(tropes_dictionary.keys())


workflow = f'''
digraph {{
    splines=polyline
    ranksep=0.3;
    nodesep=0.3;
    rankdir=LR
    margin=0;
    graph [ resolution=128, fontsize=30];

    subgraph cluster_0 {{
        style=invis
        start [label="Start" type="start"]
        extractcategories [label="Extract\nCategories" type="process"];
        extractfilms [label="Extract\nFilms" type="process"];
        extracttropes [label="Extract\nTropes" type="process"];
        dataset1 [label="Dataset\n\nfilms->tropes\n({n_films}->{n_tropes})" type="data"];
    }}
    subgraph cluster_1 {{
        style=invis
        retrievepage[label="Retrieve\nPage" type="process"];
    }}
    subgraph cluster_2 {{
        style=invis
        filecache[label="File\nCache" type="data"];
        tvtropes[label="TVTropes\nwebsite:\n\nhttps://tvtropes.org/" type="database"];
    }}


    start -> extractcategories -> extractfilms -> extracttropes -> dataset1;
    retrievepage -> filecache;
    retrievepage -> tvtropes;
    extractcategories -> retrievepage[constraint=false, dir="both"];
    extractfilms -> retrievepage[constraint=false, dir="both"];
    extracttropes -> retrievepage[constraint=false, dir="both"];
    fake_start -> fake_1 [style=invis];
    fake_1 -> retrievepage [style=invis];
    fake_start[style=invis]
    fake_1[style=invis]
}}'''

draw_graphviz(workflow, "scraper_workflow.pdf")
@

\begin{figure}
\centering
\includegraphics[width=0.6\textwidth]{figures/scraper_workflow.pdf}
\caption[Scraper]{Trope scraping process.\label{fig:scraper_workflow}}
\end{figure}

% You need to mention it's been released in Pypi and GitHub - JJ
Our scraper extracts all the categories from the main
categories page (\href{https://tvtropes.org/pmwiki/pmwiki.php/Main/Film}{https://tvtropes.org/pmwiki/pmwiki.php/Main/Film})
and for each category page, it extracts all the film identifiers assigned to it.
Finally, for every film page, it extracts all the trope identifiers.
As result, it builds a dictionary of films and tropes.
In order to ease the execution, it can be stopped and re-launched at any time
because it makes use of a local permanent cache compressed in bzip2 with a block size of 900k,
the highest compression available.
% You use like 3 different forms for TvTropes (with or without caps).
% Settle on just 1! - JJ
In order to avoid hurting the TvTropes servers, the process inserts waits between each two consecutive calls.
As result, the executions retrieved around 12K pages in 3 to 4 hours.

<<echo=False>>=
tropes_summary_dictionary = {}
for key in films_dictionary:
    tropes_summary_dictionary[key] = {'tropes':len(films_dictionary[key])}

tropes_summary_dataframe = pd.DataFrame(tropes_summary_dictionary).transpose()

films_summary_dictionary = {}
for key in tropes_dictionary:
    films_summary_dictionary[key] = {'films':len(tropes_dictionary[key])}

films_summary_dataframe = pd.DataFrame(films_summary_dictionary).transpose()
@

\begin{figure}
    \centering
    \begin{subfigure}[b]{0.15\textwidth}
        \centering
        <%=print(get_table_for_dataframe(tropes_summary_dataframe.describe([.1,.2,.3,.4,.5,.6,.7,.8,.9]), fixed_width=True))%>
        \caption{}
        \label{fig:descriptive_analysis_tropes}
    \end{subfigure}
    \hfill
    \begin{subfigure}[b]{0.4\textwidth}
        \centering
<<width="\\linewidth",echo=False, results='hidden'>>=
plot = tropes_summary_dataframe.plot.hist(log=True, color='#cccccc', figsize=(5, 5.2), ec="k", zorder=2, rwidth=0.5)
plot.set_xlabel("Films by number of tropes")
@
        \caption{}
        \label{fig:histogram_tropes}
    \end{subfigure}
    \hfill
    \begin{subfigure}[b]{0.35\textwidth}
        \centering
        <%=print(get_table_for_dataframe(tropes_summary_dataframe.sort_values('tropes',ascending=False).head(TOP_VALUES), fixed_width=True))%>
        \caption{}
        \label{fig:top_tropes_films}
    \end{subfigure}
    \caption{\textbf{(a)} Descriptive analysis of the Tropes by appearance in films.
    \textbf{(b)} Histogram of number of tropes by film.
    \textbf{(c)} Top films by number of tropes}
    \label{fig:tropes_analysis}
\end{figure}

\begin{figure}
    \centering
    \begin{subfigure}[b]{0.15\textwidth}
        \centering
        <%=print(get_table_for_dataframe(films_summary_dataframe.describe([.1,.2,.3,.4,.5,.6,.7,.8,.9]), fixed_width=True))%>
        \caption{}
        \label{fig:descriptive_analysis_films}
    \end{subfigure}
    \hfill
    \begin{subfigure}[b]{0.4\textwidth}
        \centering
<<width="\\linewidth",echo=False, results='hidden'>>=
plot = films_summary_dataframe.plot.hist(log=True, color='#cccccc', figsize=(5, 5.2), ec="k", zorder=2, rwidth=0.5)
plot.set_xlabel("Tropes by number of films")
@
        \caption{}
        \label{fig:histogram_films}
    \end{subfigure}
    \hfill
    \begin{subfigure}[b]{0.35\textwidth}
        \centering
        <%=print(get_table_for_dataframe(films_summary_dataframe.sort_values('films',ascending=False).head(TOP_VALUES), fixed_width=True))%>
        \caption{}
        \label{fig:top_films_tropes}
    \end{subfigure}
    \caption{\textbf{(a)} Descriptive analysis of the tropes by number of films in which they appear.
    \textbf{(b)} Histogram of number of films by tropes. Please note the logarithmic $y$ axis.
    \textbf{(c)} Top tropes by number of films}
    \label{fig:films_analysis}
\end{figure}

% TODO: Explicar los datasets

% DONE: Mapeo con nota: Explicar brevemente el tema de iMDb y el mapeo + explicar los datos y correlaciones (gráficas)

\subsection{Step 2: Map genres and rating}

TVTropes is a huge yet very specific database of tropes but it doesn't include a rating
or links to an external database that we could use as a rating source;
on the other hand, IMDb offers their database for non-commercial use and they provide datasets with lots of interesting features,
including the rating and the popularity. % What's the difference? - JJ
Our research just needs a way to map both tropes and ratings in order to build an extended dataset
that will ultimately help us train a surrogate model. % Not clear. You want to identify a movie in TVTropes with another in IMdb. Just say so - JJ

IMDb Datasets are a compendium of information that IMDb offers for personal and
non-commercial use. Both conditions of use and dataset descriptions are explained in
https://www.imdb.com/interfaces/. % Best as a reference. - JJ

Our current research will make use of these datasets to extend the film information from TVTropes, in particular,
{\tt title.basics.tsv}, % filename is unneeded. Use dataset name - JJ
 which contains metadata from the films such as the title, the year, the genres
and the duration, and {\tt title.ratings.tsv}, which contains the rating and the number of votes.

<<echo=False>>=
films_dictionary = read_compressed_json(FILM_TROPES_JSON_BZ2_FILE)
tropes_dictionary = reverse_dictionary(films_dictionary)

n_films = len(films_dictionary.keys())
n_tropes = len(tropes_dictionary.keys())


workflow = f'''
digraph {{
    splines=polyline
    ranksep=0.3;
    nodesep=0.3;
    rankdir=LR
    margin=0;
    graph [ resolution=128, fontsize=30];

    subgraph cluster_0 {{
        style=invis
        start [label="Start" type="start"]
        retrieve [label="Retrieve data" type="process"]
        titles [label="Title/Year\nnormalization" type="process"];
        map_title_year [label="Select\nunique matches\nby title & year" type="process"];
        map_title [label="Select\nunique matches\nby title" type="process"];
        map_popularity [label="Select\nmost popular candidates\nby title" type="process"];
    }}
    subgraph cluster_1 {{
        style=invis
        ignored [label="Ignored films", type="data"]
        extended_dataset [label="Extended Dataset\n\nid,title_imdb,\ntitle_tvtropes,\nyear,genres,\ntropes", type="data"]
    }}
    subgraph cluster_2 {{
        style=invis
        dataset1 [label="Tropes dataset\n\nfilms->tropes\n({n_films}->{n_tropes})" type="data"];
        dataset2 [label="IMDb Dataset\n\ntitle.basics.tsv\n(id,title,\nyear,genres)" type="database"];
        dataset3 [label="IMDb Dataset\n\ntitle.ratings.tsv\n(id,rating,votes)" type="database"];
    }}
    start->retrieve

    retrieve->dataset1[constraint=false];
    retrieve->dataset2[constraint=false];
    retrieve->dataset3[constraint=false];
    dataset1->dataset2[style=invis]
    dataset2->dataset3[style=invis]

    retrieve->titles;
    map_title_year->extended_dataset[constraint=false];
    map_title->extended_dataset[constraint=false];
    map_popularity->extended_dataset[constraint=false];
    map_popularity->ignored;
    titles->map_title_year->map_title->map_popularity;
}}'''

draw_graphviz(workflow, "mapper_workflow.pdf")
@

\begin{figure}
\centering
\includegraphics[width=0.9\textwidth]{figures/mapper_workflow.pdf}
\caption[Scraper]{Extending the dataset with genres and rating.\label{fig:mapper_workflow}}
\end{figure}

Items in IMDb that don't relate to films are excluded (tvEpisode, tvSeries, tvSpecial, tvShort, videoGame,
tvMiniSeries, titleType) because they are not in our TVTropes scraped dataset and they would only increase
ambiguity as more films might match the same name. % Maybe you're devoting too much time to
% this. I think this should better go to a separate technical report. In a
% journal paper you need to focus on what's innovative, not so much on the mechanics
% - JJ
As described in Figure~\ref{fig:mapper_workflow}, in order to be able to map the film names,
films names are normalized in both cases, TVTropes and IMDb, converting camel-case to Title case, removing
non-alphanumerical values and extra blanks, splitting name and year when required, and converting to lowercase.
Normalized names in TvTropes and IMDb are matched, ideally \{1->1\}.
In order to reduce ambiguity, if the year is present in TvTropes's identifier,
we reduce the search to the specific year in IMDb.
If there are more than one match for a tvTropes's identifier in IMDb,
we just choose the one with the highest number of votes. % Present this as a problem, then your solution - JJ
This heuristic relies in the fact that both data sources (tropes and votes)
are maintained by different communities of users, enthusiasts in both cases,
so if there is a film in TVTropes and there are many films with the same name in IMDb,
it will probably be the one with highest popularity, that is reflected in the number of votes.
We decided to include the original title so that non-English titles can be handled as well.


<<echo=False>>=
extended_dataframe = read_dataframe(FILM_EXTENDED_DATASET_TABLE_BZ2_FILE, USE_HDF)
trope_names = [key for key in extended_dataframe.keys() if key not in EVERYTHING_BUT_TROPES and '[GENRE]' not in key]
extended_dataframe['Number of tropes'] = sum(getattr(extended_dataframe,key) for key in trope_names)

coefficient_rating_votes, p_value_rating_votes = stats.pearsonr(extended_dataframe['Rating'], extended_dataframe['Votes'])
coefficient_rating_ntropes, p_value_rating_ntropes = stats.pearsonr(extended_dataframe['Rating'], extended_dataframe['Number of tropes'])
coefficient_votes_ntropes, p_value_votes_ntropes = stats.pearsonr(extended_dataframe['Votes'], extended_dataframe['Number of tropes'])
coefficient_year_ntropes, p_value_year_ntropes = stats.pearsonr(extended_dataframe['Year'], extended_dataframe['Number of tropes'])
@

\begin{figure}
    \centering
    \begin{subfigure}[b]{0.3\textwidth}
        \centering
<<width="\\linewidth",echo=False, results='hidden'>>=
extended_dataframe.plot.scatter(x='Rating', y='Number of tropes', color='darkgray', label='Films', figsize=(4, 4))
plot_regression(extended_dataframe, 'Rating', 'Number of tropes', 'black')
@
        \caption{\begin{tabularx}{\textwidth}{lX} coefficient: & <%=coefficient_rating_ntropes%> \\ p-value & <%=p_value_rating_ntropes%> \end{tabularx}}
        \label{fig:rating_ntropes}
    \end{subfigure}
    \hfill
    \centering
    \begin{subfigure}[b]{0.3\textwidth}
        \centering
<<width="\\linewidth",echo=False, results='hidden'>>=
extended_dataframe.plot.scatter(x='Votes', y='Number of tropes', color='darkgray', label='Films', figsize=(4, 4))
plot_regression(extended_dataframe, 'Votes', 'Number of tropes', 'black')
@
        \caption{\begin{tabularx}{\textwidth}{lX} coefficient: & <%=coefficient_votes_ntropes%> \\ p-value & <%=p_value_votes_ntropes%> \end{tabularx}}
        \label{fig:votes_ntropes}
    \end{subfigure}
    \hfill
    \centering
    \begin{subfigure}[b]{0.3\textwidth}
        \centering
<<width="\\linewidth",echo=False, results='hidden'>>=
extended_dataframe.plot.scatter(x='Year', y='Number of tropes', color='darkgray', label='Films', figsize=(4, 4))
plot_regression(extended_dataframe, 'Year', 'Number of tropes', 'black')
@
        \caption{\begin{tabularx}{\textwidth}{lX} coefficient: & <%=coefficient_year_ntropes%> \\ p-value & <%=p_value_year_ntropes%> \end{tabularx}}
        \label{fig:year_ntropes}
    \end{subfigure}
    \hfill
    \caption{Scatter plot to show the relation between: \textbf{(a)} Rating vs. \# of tropes
    \textbf{(b)} Votes vs. \# of tropes \textbf{(c)} Year vs. N\# of tropes}
    \label{fig:extended_dataset_scatterplots}
\end{figure}

The resulting dataset includes the identifier in IMDb, in TVTropes, the name of the film, the year, the rating,
the number of votes, the tropes for the film (0 if not present, 1 if present) and the genre (0 if not present,
1 if present).

A brief analysis of the new extended dataset,
consisting in <%=extended_dataframe.shape[0]%> films linked to <%=len(trope_names)%> tropes,
shows that there are significant positive correlations between the number of tropes
and the rating, the popularity and the year, as shown in Figure \ref{fig:extended_dataset_scatterplots},
% TODO why?
% Again, this should be mentioned only in conjunction with the paper objectives.
% Does this help understand the surrogate model? Will this help understand the
% eventual GA result? Even if that were the case, spinning initial data analysis
% and scraping mechanics to a technical report will make this paper lighter
% without losing value - JJ
% DONE: Generación del modelo surrogado: Red Neuronal + descripción de parámetros estándar + decisiones + (en proceso de ver lo mínimo que hay que evaluar)

% These steps 1 and 2 are basically the creation of the training set for
% the surrogate model, together with some initial analysis which is not relevant
% to the paper at large. It would be probably much better to publish it separately
% as a technical report in ArXiV - JJ

\subsection{Step 3: Build the Evaluator}

<<echo=False>>=
input, output = get_experiment_execution_information(EVALUATOR_BUILDER_LOG_FILE)
layers = output[output['parameter']=='Layer sizes']['value'][0].split(', ')
@

Given our Extended Dataset, % Give it a name, not All Caps - JJ
 our goal is to build an evaluator % better trope-to-popularity mapper - JJ
that can be used as a surrogate model by the Genetic Algorithm, in further steps.

The inputs are binary values for every trope defined in the Extended Dataset
and the output is a continuous numeric value that represents the rating of the film.
% Don't use this as a given. It could be preprocessed in many ways. Say
% something along the lines of "the deep learning technique will itself act as
% a feature extractor" or something like that. And in "future work" mention something
% Also mention the fact that most values will be 0 - JJ
A neural network is a technique that perfectly fits in our requirements,
because the relations among inputs are unclear and the effect on the rating is complex.

The goal of the research is to evaluate a methodology, and hence, we need a surrogate model
that suits our needs of estimating the rating from a Film DNA, accepting a reasonable number of false positives and
false negatives, without actually focusing too much in maximizing its quality.
There are many decisions that can define the quality of the model;
some of them will be made based on the state of the art
and, for others, we will have to make hyper-parameters search.
In general, although there are many rules of the thumb to build acceptable neural networks,
results may differ drastically depending on the nature of the problem and
it is recommended to do a hyper-parameters evaluation % cite required

We selected the Multi-layer perceptron (MLP)
because it is a flexible feedforward artificial neural network
generally used to learn a mapping from inputs to outputs. % Every single neural network is that. Give a better reason - JJ
According to \cite{reed1999neural}, although a single hidden layer can theoretically be used
to approximate any function that we require (universal approximation theorem),
using two hidden layers (or more) can be much more efficient. Regarding the number of neurons,
we will follow the geometric pyramid rule proposed by \cite{masters1993practical}.


In order to choose hyper-parameters that get along with the nature of our problem
we did a preliminary search with all the combinations in a domain of possible values
for the activation (ReLu or tanh),
the number of hidden layers (1 or 2),
the number of neurons in each layer (162 or 883/29),
the learning rate (contant or adaptative)
and the solver (Adam or SGD).
We applied 3-fold cross validation and got the average and the standard deviation.

% Never start paragraphs with Regarding. It should be related to the previous one, but continue with it. It's not an item list - JJ
Regarding the genres from IMDb, we also consider them (high level) tropes because a genre usually sets
common structures and elements in the film, hence we are including them as features in our MLP.

The results in figure~\ref{fig:gridsearch_results} show that
a MLP with the structure <%='/'.join(layers)%>, using ReLu activation,
constant learning rate and SGD solver provides the best validation score.

<<echo=False>>=
iterations_evaluator = extract_iterations_from_log(log_file_name=EVALUATOR_BUILDER_LOG_FILE)
gridsearch_dataframe = extract_grid_parameters_from_log_and_results(log_file_name=EVALUATOR_HYPER_PARAMETERS_LOG_FILE)
@

\begin{figure}
    \centering
<%=print(get_table_for_dataframe(gridsearch_dataframe))%>
    \caption{Hyper-parameters evaluation using 3-folded cross validation, sorted by validation score}
    \label{fig:gridsearch_results}
\end{figure}

\begin{figure}
    \centering
<<width=".5\\linewidth",echo=False, results='hidden'>>=
plot = iterations_evaluator.plot(x='iteration', y=['loss','validation'], logy=True, color='black', linestyle='-')
plot.lines[1].set_linestyle('--')
leg = plot.legend()
plot.grid()
@
    \caption{Evolution of the loss and the validation score throughout the training iterations}
    \label{fig:evaluator_training}
\end{figure}

As we can see in Figure \ref{fig:evaluator_training},
the training of the MLP using the hyper-parameters found in the preliminary study
converges to a loss of <%=iterations_evaluator['loss'].iloc[-1]%>
and a validation score of <%=iterations_evaluator['validation'].iloc[-1]%>.

% Which training? How many did you do? Is this a typical training? - JJ

% DOING: Generación de conjuntos de tropos mediante GAs: Descripción del algoritmo + operadores + parámetros
\subsection{Film DNA builder}

% explicar el paso
At this step we already have a set of candidate tropes for the Film DNA and a model
that allows its evaluation, so our goal is to use a device that allows us to generate a Film DNA that optimizes the rating.

% Que es un GA y por qué es interesante
We chose to use a Genetic Algorithm because it is a mechanism that allows us to explore the domain of Film DNAs,
in other words, of combinations of tropes, getting high-quality solutions and dealing with global optimization problems.
% cite

% Trabajamos con tropos, que es un cromosoma
Our chromosome will be the DNA film, that is, a set of tropes.
In practice it will be encoded as an array of different indices on a dictionary of the total set of tropes available
without value repetitions, given that, \textit{a priori}, the order of the tropes is irrelevant
(according to their nature, they can refer to specific moments, but also to narrative structures and general settings)
and also, our rating evaluator does not consider weights or multiple occurrences of the trope in the movie
(both, training data and model do not consider multiple occurrendes of a trope in a single Film, in other words,
the trops appears or does not appear).

% La Mutación
The mutation operator changes a trope of the Film DNA by another that is randomly chosen
from the set of tropes ou of the Film DNA. By doing this, the Film DNA keeps complying with its restrictions,
mentioned above, and allows an exploration of new tropes.

% El cruzamiento
The crossover operator will make a superset of tropes from the parents' Film DNAs
and randomly selects two subsets for the offspring.
This way, the offspring will have Film DNAs whose tropes are exclusively from their parents, allowing
the exploitation of the data.


% La función fitness y el modelo surrogado
As we explained above, we have to rely on a surrogate model for the evaluation of Film DNAs, and our approach uses
a neural network trained with existing movies. The fitness of our GA will be the result of evaluating a DNA trope with
the neural network.

According to pour tests, the genetic algorithm has proven to converge towards optimal solutions efficiently,
given the simplicity of the operators based on set algebra, and fitness calculation, in this case, a trained neural network.

\section{Experimental setup}

The evaluation of the methodology is performed unequivocally through its testing in different scenarios
and the analysis of results.
In this case, different applications of the methodology have been chosen,
which will help us answer the following questions:
Can we try to generate the optimal Trope DNA for a standard movie?
Could we fix the number of genres while maximizing the rating?
Could we use this methodology to improve an existing Trope DNA?
How much do our results resemble existing films?

Our experiment will use a fixed size Film DNA of 30 tropes, which is the median of tropes per film
in the original dataset.

The most suitable parameters to solve a specific problem require an extensive calibration, which is outside
of the scope of this paper. However, to choose the set of parameters that we will use in all the experiments
in this paper, we have made a preliminary selection executing all possible combinations of Population (P) = \{50, 100, 200\},
Mutation probability (Mp) = \{\(2\div size_{dna}\), \(1\div size_{dna}\), \(0.5\div size_{dna}\)\}
and Crossover Probability (Cp) = \{0.25, 0.5, 0.75\}
and we have chosen the combination P = 200, Mp = \(1\div size_dna\) , Cp = 0.5, because it performs better average results.

In the experiments we have set the stop criterion to a minimum of 3000 evaluations and
until the best generation does not improve during 10000 evaluations.

As tools to interpret the results, we will use two metrics of similarity between finite sample sets.
The first one is a metric called \textit{Jaccard coefficient}
and is defined as the cardinality of the intersection of Film DNAs divided by the cardinality of the union of the Film DNAs.
The second one is called \textit{Overlap coefficient}
and is defined as the cardinality of the intersection of Film DNAs divided by the smallest length of the two Film DNAs.
Both metrics are interesting because we are dealing with incomplete data and we cannot assume that a a Film that has few tropes in its DNA
is actually extensively defined and described by the wisdom of crowds in our Extended Dataset as well as other popular films.
% TODO Citar las métricas
\section{Results}

\subsection{Finding the best Trope DNA without genre limitations}

The repetition of the Genetic Algorithm 30 times has resulted in an average fitness of 9.783487634688873 (+- 0.4307202616394516).
The best solution has a rating of 10.313031174658876 and a Film DNA with the following tropes.


DNA = \{ActionHeroBabysitter, DeathByFlashback, DisneyVillainDeath, DuelToTheDeath, EarlyBirdCameo, FightingFromTheInside, HandsOffParenting, Homage, ImNotAfraidOfYou, JumpCut, MouthingTheProfanity, NoSympathy, OminousFog, OneHeadTaller, PoorMansSubstitute, PragmaticAdaptation, RichIdiotWithNoDayJob, SomeoneToRememberHimBy, SpitefulSpit, TalkingHeads, TitledAfterTheSong, WeaponOfXSlaying, [GENRE]Animation, [GENRE]Documentary, [GENRE]Drama, [GENRE]History, [GENRE]Mystery, [GENRE]Romance, [GENRE]War, [GENRE]Western\}


<<echo=False>>=
checker = TropesSimilarityChecker()
checker.load_extended_dataset_json(FILM_EXTENDED_DATASET_DICTIONARY_BZ2_FILE)
tropes_list = ['ActionHeroBabysitter', 'DeathByFlashback', 'DisneyVillainDeath', 'DuelToTheDeath',
               'EarlyBirdCameo', 'FightingFromTheInside', 'HandsOffParenting', 'Homage', 'ImNotAfraidOfYou',
               'JumpCut', 'MouthingTheProfanity', 'NoSympathy', 'OminousFog', 'OneHeadTaller',
               'PoorMansSubstitute', 'PragmaticAdaptation', 'RichIdiotWithNoDayJob', 'SomeoneToRememberHimBy',
               'SpitefulSpit', 'TalkingHeads', 'TitledAfterTheSong', 'WeaponOfXSlaying', '[GENRE]Animation',
               '[GENRE]Documentary', '[GENRE]Drama', '[GENRE]History', '[GENRE]Mystery', '[GENRE]Romance',
               '[GENRE]War', '[GENRE]Western']
top_overlap_exp1_1, top_jaccard_exp1_1 = checker.get_top_films_by_simmilarity(tropes_list, 5)
@

\begin{figure}
    \centering
<%=print(get_table_for_dataframe(top_overlap_exp1_1, fixed_width=True))%>
    \caption{10 most similar films to the synthetic Film DNA according to the Overlap Metric and sorted by rating}
    \label{fig:top_overlap_exp1_1}
\end{figure}

\begin{figure}
    \centering
<%=print(get_table_for_dataframe(top_jaccard_exp1_1, fixed_width=True))%>
    \caption{10 most similar films to the synthetic Film DNA according to the Jaccard Metric and sorted by rating}
    \label{fig:top_jaccard_exp1_1}
\end{figure}

<<echo=False>>=
top_overlap_exp1_1, top_jaccard_exp1_1 = checker.get_top_films_by_simmilarity(tropes_list, 5, ignore_genres=True)
@

\begin{figure}
    \centering
<%=print(get_table_for_dataframe(top_overlap_exp1_1, fixed_width=True))%>
    \caption{10 most similar films to the synthetic Film DNA according to the Overlap Metric, sorted by rating and ignoring genres}
    \label{fig:top_overlap_exp1_2}
\end{figure}

\begin{figure}
    \centering
<%=print(get_table_for_dataframe(top_jaccard_exp1_1, fixed_width=True))%>
    \caption{10 most similar films to the synthetic Film DNA according to the Jaccard Metric, sorted by rating and ignoring genres}
    \label{fig:top_jaccard_exp1_2}
\end{figure}

The syntethic Film DNA belongs to a multi-genre film (historical documentary romantic drama set during a war that includes
western and mistery settings, not comedy).
However, according to one of the tropes, even if it is historical/documentary,
it is completely an adaptation from the author with clear differences with the overall known story for pragmatic reasons (PragmaticAdaptation).
There are tropes that point to specific features of a hero:
The 'hero' is a rich character with free time (RichIdiotWithNoDayJob),
that has a position of responsibility for children (ActionHeroBabysitter),
that could be related to the existence of irresponsible parents (HandsOffParenting).
There are tropes that define the conflicts and how they will develop:
Someone resisting the controlling influence acting on them ('FightingFromTheInside'),
a villain is finally fought by the hero when he is 'not afraid of' anymore (ImNotAfraidOfYou),
there is a duel (DuelToTheDeath),
a special weapon is used (WeaponOfXSlaying),
the villain falls off (DisneyVillainDeath),
and the hero also dies.
There are tropes that points to a romantic relation between the hero and a girl,
that in some scenes is be clearly taller or shorter than him ('OneHeadTaller),
and that discovers, in the end, that is pregnant (SomeoneToRememberHimBy).
There are also tropes that define the setting, in this case, there is fog (OminousFog) as part of the mystery genre
and a clear 'Homage' to a classic or well known artwork in the same genres is present.
Regading the narrative perspective,
the story includes a flashback that points to the death of the main character/s (DeathByFlashback),
uses 'Jump Cuts' (JumpCut) and make a main character appear before his/her introduction (EarlyBirdCameo).
Some tropes also define very specific sequences; in some cases the film includes spits (SpitefulSpit)
and the characters swear, although it cannot be heard by the audience (MouthingTheProfanity).
There is also a scene where terrible things have happened to the main characters but no-one acts as it is really important (NoSympathy),
and there are scenes with no action, just long conversations where people do not move (TalkingHeads).
Regarding the meta-tropes present,
an actor or actress is be relatively unknown but looks alike another well known one (PoorMansSubstitute)
and the film's name is a reference to an existing song.


The films that have the highest similarity according to the Jaccard and Overlap metrics
and compared to the synthetic Film DNA are listed in Figures~\ref{fig:top_overlap_exp1_1} and~\ref{fig:top_jaccard_exp1_1}
sorted by similarity and rating. By looking at the films, it is clear that the genre has a very important weight
on the similarity and might be a source of biases, so we ignore the genres in the similarity analysis in
Figures~\ref{fig:top_overlap_exp1_2} and~\ref{fig:top_jaccard_exp1_2}

The Synthetic Film DNA is hard combination of genres, and this is why, in the next experiment, the number of genres is fixed.
Anyway, it is fun to analyze, as it reminds to films as 'Gone with the Wind', 'A Year of the Quiet Sun' or 'Man of the West'
in the sense that they combine multiple genres that are present in our Synthetic Film DNA. If we ignore the genres,
we can observe that it reminds to films like 'A Midwinter’s Tale', because of the reference in the Title or the dialogs without action,
'The Postman (Il postino)' because they both include the idea of 'gone, but not forgotten',
'Jane Eyre' or 'Tristan and Isolde' for the pragmatic adaptation of the author and some narrative details.

It is important to remark that, in all the cases, the Jaccard metrics indicate that the Film DNA is genuine,
and most of the films with high rating that resembles it are films with incomplete trope development.
In the best cases, there are 3 common tropes at maximum.

These results are interesting and directly applicable to the generation of scripts.
However, we consider that our methodology leads to Film DNAs that promote the appearance of many genres at the same time
and that could be hard to implement or, in some cases, incompatible. The next experiment tries to fix this situation.


\subsection{Finding the best Trope DNA with genre limitations}

This experiment sets the number of genres to the average, X, according to the extended dataset.
In order to implement it, we decide to implement a variant of the fitness function of the Genetic Algorithm
that punishes solutions with a number of genres different to X, reducing the fitness by 5 points. This technique has been used
for ... in .. (citas).

The repetition of the Genetic Algorithm 30 times has resulted in an average fitness of
aaaa (+- bbbbb).  The best solution has a rating of ccccccc and a Film DNA with the following tropes.

<TO ADD>


The 5 films that have the most tropes in common with this Film DNA are:


<TO ADD>


The minimum set of films that, together, maximize the number of common tropes, are.


<TO ADD>

Although the rating is lower than in the previous experiment, a Film with the provided Film DNA is easier to design as we
are not dealing with big genre incompatibilities.


\subsection{Improving the Film DNA of a known film}

Could our methodology keep the essence of a film, that is translated to keeping most of the tropes,
while adding some new tropes in the Film DNA that optimize the note?

It is totally out of our intention to question a work of art like Star Wars, episode IV,
however, we feel a special predilection for this masterpiece of all time
and we consider that it is an appealing example for many of our readers,
that's why we are using this film as an example.


We will try to find Film DNAs that share at least 20 tropes with that film and let the GA find the rest, up to 30,
so that the new Film DNA of size 30 improves the rating of the original film.

In order to make this experiment we decide to implement a variant of the fitness function of the Genetic Algorithm
that punishes solutions that do not share at least 20 tropes with the film, reducing the fitness by 5 points. This technique has been used
for ... in .. (citas).

The repetition of the Genetic Algorithm 30 times has resulted in an average fitness of
aaaa (+- bbbbb).  The best solution has a rating of ccccccc and a Film DNA with the following tropes.


<TO ADD> (show original tropes in one color and the new in other)

The films that better matches the added tropes are:

This results are interesting



\section{Conclusions}
% TODO: Objetivo ha sido ...
% TODO: Para ello hemos realizado tal (metodología y experimentos) ...
% TODO: Los resultados nos dicen que ...
% TODO: Esto puede ser la base para una futura linea...

\section{Bibliography}
\bibliography{report}

\end{document}
